// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type ActiveServer struct {
	Timestamp    pgtype.Timestamptz `db:"timestamp"`
	Address      string             `db:"address"`
	Protocols    []byte             `db:"protocols"`
	Name         string             `db:"name"`
	Gametype     string             `db:"gametype"`
	Passworded   bool               `db:"passworded"`
	Map          string             `db:"map"`
	MapSha256sum *string            `db:"map_sha256sum"`
	MapSize      *int32             `db:"map_size"`
	Version      string             `db:"version"`
	MaxClients   int16              `db:"max_clients"`
	MaxPlayers   int16              `db:"max_players"`
	ScoreKind    string             `db:"score_kind"`
}

type ActiveServerClient struct {
	ID        int64  `db:"id"`
	MessageID int64  `db:"message_id"`
	Address   string `db:"address"`
	Name      string `db:"name"`
	Clan      string `db:"clan"`
	CountryID int16  `db:"country_id"`
	Score     int32  `db:"score"`
	IsPlayer  bool   `db:"is_player"`
	Team      *int16 `db:"team"`
}

type Channel struct {
	ChannelID int64 `db:"channel_id"`
	GuildID   int64 `db:"guild_id"`
	Running   bool  `db:"running"`
}

type Flag struct {
	FlagID int16  `db:"flag_id"`
	Abbr   string `db:"abbr"`
	Emoji  string `db:"emoji"`
}

type FlagMapping struct {
	GuildID   int64  `db:"guild_id"`
	ChannelID int64  `db:"channel_id"`
	FlagID    int16  `db:"flag_id"`
	Emoji     string `db:"emoji"`
}

type Guild struct {
	GuildID     int64  `db:"guild_id"`
	Description string `db:"description"`
}

type PlayerCountNotification struct {
	GuildID   int64 `db:"guild_id"`
	ChannelID int64 `db:"channel_id"`
	MessageID int64 `db:"message_id"`
	UserID    int64 `db:"user_id"`
	Threshold int16 `db:"threshold"`
}

type PrevActiveServer struct {
	MessageID    int64              `db:"message_id"`
	GuildID      int64              `db:"guild_id"`
	ChannelID    int64              `db:"channel_id"`
	Timestamp    pgtype.Timestamptz `db:"timestamp"`
	Address      string             `db:"address"`
	Protocols    []byte             `db:"protocols"`
	Name         string             `db:"name"`
	Gametype     string             `db:"gametype"`
	Passworded   bool               `db:"passworded"`
	Map          string             `db:"map"`
	MapSha256sum *string            `db:"map_sha256sum"`
	MapSize      *int32             `db:"map_size"`
	Version      string             `db:"version"`
	MaxClients   int16              `db:"max_clients"`
	MaxPlayers   int16              `db:"max_players"`
	ScoreKind    string             `db:"score_kind"`
}

type PrevActiveServerClient struct {
	ID        int64  `db:"id"`
	MessageID int64  `db:"message_id"`
	GuildID   int64  `db:"guild_id"`
	ChannelID int64  `db:"channel_id"`
	Name      string `db:"name"`
	Clan      string `db:"clan"`
	CountryID int16  `db:"country_id"`
	Score     int32  `db:"score"`
	IsPlayer  bool   `db:"is_player"`
	Team      *int16 `db:"team"`
	FlagAbbr  string `db:"flag_abbr"`
	FlagEmoji string `db:"flag_emoji"`
}

type PrevMessageMention struct {
	GuildID   int64 `db:"guild_id"`
	ChannelID int64 `db:"channel_id"`
	MessageID int64 `db:"message_id"`
	UserID    int64 `db:"user_id"`
}

type Tracking struct {
	ID        *int64 `db:"id"`
	MessageID int64  `db:"message_id"`
	GuildID   int64  `db:"guild_id"`
	ChannelID int64  `db:"channel_id"`
	Address   string `db:"address"`
}
